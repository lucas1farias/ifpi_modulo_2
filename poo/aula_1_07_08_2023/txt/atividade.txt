



// 1. Qual a diferença entre objetos e classes? Exemplifique.

/* 
    2. De forma breve, conceitue atributos e métodos. Pesquise e exemplifique um exemplo de objeto que possua 
    atributos e métodos (notação livre).
*/

/* 
    3. A abstração visa focar no que é importante para um sistema. Você concorda que um atributo de uma pessoa
    pode ser importante ou não dependendo do contexto do sistema. Enumere na tabela abaixo contextos/sistemas 
    distintos em que os atributos abaixo seriam relevantes:

    Atributo                Sistema em que é importante
    Peso
    Tipo de CNH
    Tipo Sanguíneo
    Habilidade destra
    Percentual de gordura
    Saldo em conta
    Etinia
*/

/* 
    4. Considerando os objetos Pessoa e Conta:

    a. Seria interessante em um sistema bancário um objeto "conta" possuir uma "pessoa" como um atributo 
    interno representando o titular da conta?

    Sim, pois uma pessoa pode possuir várias contas, e em cada conta, seria interessante ela apontar para um
    único dono

    b. Olhando no sentido inverso, seria interessante uma pessoa possuir mais de uma conta como atributo? Que 
    elemento da programação estruturada melhor representaria o conjunto de contas de uma pessoa?
*/

// 5. Identifique pelo menos 5 objetos de um sistema de controle acadêmico. Ex: aluno.

/* 
    6. Imagine um jogo qualquer. Identifique o máximo de objetos possíveis e eventuais características 
    (atributos) e comportamentos (métodos) que os mesmos poderiam ter.
*/

/*
    Usando playground (https://www.typescriptlang.org/play), faça:
    
    7. Considerando o exemplo da classe Retangulo dos slides, implemente um método adicional chamado que 
    calcule o perímetro do retângulo e altere a classe TestaRetangulo para exibir o cálculo do perímetro.
*/

/*
    8. Crie uma classe Circulo que possua um atributo raio. Crie dois métodos que calculam a área e o perímetro. 
    Instancie um objeto dessa classe, atribua um valor ao raio e exiba a área e o perímetro chamando os dois 
    métodos definidos.
*/

/*
    9. Crie uma classe chamada SituacaoFinanceira com os atributos valorCreditos e valorDebitos. Crie um método
    chamado saldo() que retorna/calcula a diferença entre crédito e débito. Instancie uma classe 
    SituacaoFinanceira, inicialize os dois atributos e exiba o resultado do método saldo().
*/

// 10. Represente as classes das questões 8 e 9 no formato UML. Pesquise uma ferramenta on line.
